<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="icoprog.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBUODAsLDBkSEw8VHhsgHx4bHR0h
        JTApISMtJB0dKjkqLTEzNjY2ICg7Pzo0PjA1NjP/2wBDAQkJCQwLDBgODhgzIh0iMzMzMzMzMzMzMzMz
        MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzP/wAARCABGAEYDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD5/p8MMtxMkMMbySyMFREGWYngADuaWCCW5njggjeWaVgiRopZ
        mYnAAA6kmvpbwn4S0D4PeFf+En8TlG1hlxwA7Rsw4iiHdiMgn68hcmgDjPB37P2q6pHHe+I7k6XbnDC2
        jAadh79k/U+oFdadF+CHg54o725s7u6jOGMsr3bZH99I8qD7FRXk/jn4r+IPGk0kLTtY6UeFsoHIDDP8
        bdXPTrxxwBXGWFheapex2VhbTXV1LkJDChZmwMnAHXgE0AfRa+NfghJKYW0rTETp5h0bg/kmf0pIvA3w
        e8bp5Wg38drduSVW1uWSU8f88pc8fRfxrxH/AIV74y/6FbWP/AN/8K5shkfByGU/kaAPTfGvwR8Q+Fop
        L2wP9r6cgy0kCYljHH3o+Tj3UngEnFeY16x8P/jdrHh2eKx16WXUtJPy7nO6eEeqsfvD2Ptgjoeo+KXw
        003X9Fbxv4O8pxInn3MEH3J16mRB2cfxL3wejA7gD5/ooooA9r/Z98Gxahqtz4ovog0Gnt5VruHHnEZL
        f8BUjr3YHqK434p+OpfG/iyWaKQ/2XaExWSZOCueXwe7EZ+mB2r1yLd4N/ZhMsXli5u7MNuHBb7Q4Gf9
        4I4/75r5qoAK7z4Mf8la0L/fl/8ARL1wddP8PNBtvE/jrTNGu5riGC6Zw8luwV1xGzcEgjqPSgD7X4r4
        Guf+Pqb/AHz/ADr6g/4Z88M/9BrxD/4FR/8Axuvl2ZQk8iDOFYjn60AMr2T4DePJNK11fC99NnT79j9m
        LH/VT9gD6N0x/e2+prxupba5ms7qG5t5GinhcSRup5Vgcgj6GgDvPjF4OTwj44mFrHs06/H2m3UDCpk/
        Mg4xw3QDoCtFep/GbT28Y/Drw3rdhbM9xJJHJGuQCscsRZh+apRQBD8Ro3l/Zy0B4gdiW9iz4HRfLA/m
        RXzjX0v4UQ+Pv2dLnRo3eW9toXtgo4JkiYSRL9CPLFfNBGDg0AFd58GP+StaD/vy/wDol64Ou8+DH/JW
        tB/35f8A0S9AH2HXwLc/8fU3++f5199V8C3P/H1N/vn+dAEVFFXdH0u41vWbPS7Rc3F3MsUeegLHGT7D
        qfagD6z0m4t7L4TeFnviNhs7YDPqYsj9KK4f4/6jb6L4V8PeGbH93tkEiKjYMccSFFGPQ7+P900UAcP8
        EfHEfhXxU2nX0gTTdU2xu7HAilGdjewOSp6dQScCrPxs+Hkvh3Xpdf0+HOkX8m5wg4t5jyQfRWPI+pHG
        BnybpXvfw0+LWn6hpK+E/G7RPEy+TDd3ABSROgSXPQjs3T1wRkgHgld58GTj4taET/fl/wDRL12fjn4B
        XtrLLqHhBheWjZf7FI+JYx6Ix4cdepB6fePNeNX+m32lXRtdQs7i0uByYp4yjD8CM0Afem5f7w/Ovga5
        /wCPqb/fP86i5rU0Xw5rPiO5+z6PplzeyAgN5MZKpnpuboo9yRQBlgZr6B+B3gQaPay+OdeVbaNYGay8
        47dkeDumOegK5APoSehBp/gn4IWWgxjXvHNxalLceYbNnHkx+8rng4P8I446kHFct8Wfi2fFm7Q9DZ49
        DRh5khG1rojocdkB5APJ4JxwAAcd8RfFz+NfGV5qo3i1GIrRG6rEvT8SSWI7FjRXK0UAFFFFAHa+Efir
        4p8HIlvZXoubFelndgyRr/u8gr9AQPY16nZftEaFqFsYPEPhq4CkYKwFLhH/AOAvtx9OaKKAGJ8U/hLC
        yzR+Byjg5Vl0m1BB+u+otX/aPt4YTB4e8PEADEcl44VV/wC2adf++hRRQB5J4q8eeI/GU+7WNReSANuS
        2jGyJOuMKOpGSMnJ965qiigAooooA//Z
</value>
  </data>
</root>